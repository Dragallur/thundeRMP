# NOTE: This workflow is overkill for most R packages
# check-standard.yaml is likely a better choice
# usethis::use_github_action("check-standard") will install it.
#
# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
      - devel
      - dev
      - ci-pipeline
  pull_request:
    branches:
      - main
      - master
      - devel
      - dev

name: docker

jobs:
  rocker-verse:
    runs-on: ubuntu-latest
    container: rocker/verse
    #or
    #container:
    #  image: ghcr.io/bczernecki/rstudio_412:latest
    steps:
      - uses: actions/checkout@v1
      
      - name: Install thundeR dependencies
        run: R -e 'install.packages(c("climate", "aiRthermo"))'

      #- run: R CMD INSTALL ${{ github.event.repository.name }}
      - run: |
          pwd
          ls -alh
          R CMD INSTALL .
        shell: bash
      
      - name: Show installed packages
        run: Rscript -e 'installed.packages()[, 1:3]'
        shell: bash
        
      - name: Valgrind + rocker
        run: |
          apt-get clean && apt-get update
          apt-get -y install valgrind
          R -d valgrind -e "Rcpp::sourceCpp('src/main.cpp')"
      
      - name: Valgrind + rocker detailed
        run: |
           R -d "valgrind --leak-check=full --show-reachable=yes --track-origins=yes" -e 'Rcpp::sourceCpp("src/main.cpp")'
           #R -d valgrind -s -e 'Rcpp::sourceCpp("src/main.cpp")'
        shell: bash
        
  docker-rhub-debian-clang:
    runs-on: ubuntu-latest
    container: 
      image: rhub/debian-clang-devel:latest
    steps:
      - uses: actions/checkout@v1

      - name: symbolic link for clang on R-devel
        run: |
          ln -sf /opt/R-devel/bin/R* /usr/bin 
          which R
          #R -e 'sessionInfo()'
        shell: bash
        
      - name: prepare environment
        run: |
          apt-get clean && apt-get update
          apt-get install -y libxml2 libxml2-dev libssl-dev vim wget gdebi-core libapparmor1 libclang-11-dev libclang-dev libpq5 psmisc sudo git libgit2-dev
          export PATH=$PATH:/opt/R-devel/bin
          which R
        shell: bash
        
      - name: Install dependencies
        run: |
          options(repos = "https://cloud.r-project.org")
          install.packages(c("XML", "httr", "curl","dplyr", "tidyr", "rmarkdown", "maps",  "climate", "roxygen2", "data.table", "devtools"))
        shell: Rscript {0}

  rocker-verse-valgrind:
    runs-on: ubuntu-latest
    container: rocker/verse
    steps:
      - uses: actions/checkout@v1
      
      - name: Install thundeR dependencies
        run: R -e 'install.packages(c("climate", "aiRthermo", "RadioSonde", "covr"))'
        
      - name: Install TeX
        run: |
          apt-get update
          apt-get install -y texlive-fonts-recommended

      - name: valgrind as on CRAN
        run: |
          apt-get clean && apt-get update
          apt-get -y install valgrind
          R CMD INSTALL .
          R CMD build .
          R CMD check *tar.gz
          R -d valgrind --vanilla < thunder.Rcheck/thunder-Ex.R
        shell: bash
        
      - name: valgrind as on CRAN with memcheck
        run: |
          R -d "valgrind --tool=memcheck --leak-check=full" --vanilla < thunder.Rcheck/thunder-Ex.R
        
